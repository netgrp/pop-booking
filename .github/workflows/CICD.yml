name: Build and Release

on:
  push:
    branches:
      - "testing_CI"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_amd64:
    name: amd64 build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build amd64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release

      - run: mv target/release/backend target/release/backend_amd64

      - name: upload binary
        uses: actions/upload-artifact@v4
        with:
          name: backend_amd64
          path: target/release/backend_amd64
          
  build_arm64:
    name: arm64 build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build arm64
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --all --release --target=aarch64-unknown-linux-musl

      - run: mv target/aarch64-unknown-linux-musl/release/backend target/release/backend_arm64

      - name: upload binary
        uses: actions/upload-artifact@v4
        with:
          name: backend_arm64
          path: target/release/backend_arm64

  publish:
    needs: [build_amd64, build_arm64]
    name: Publish Docker Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
              latest=true
          tags: |
              type=schedule,pattern={{date 'YYYYMMDD-HHmmss' tz='UTC'}}
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{major}}.{{minor}}.{{patch}}
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}
              type=sha

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          provenance: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max