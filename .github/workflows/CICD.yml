#
name: Create and publish Docker image

on:
  push:
    branches: ["release"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pop-booking

jobs:
  build-and-push-x86-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - run: cargo build --release

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64

  # build-and-push-arm-image:
  #   runs-on: self-hosted
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - run: cargo build --release

  #     - name: Build Image
  #       id: build-image
  #       uses: redhat-actions/buildah-build@v2
  #       with:
  #         image: ${{ env.IMAGE_NAME }}
  #         tags: aarch64 ${{ github.sha }}
  #         platform: linux/arm64
  #         containerfiles: |
  #           ./Dockerfile

  #     - name: Push To ghcr Registry
  #       uses: redhat-actions/push-to-registry@v2
  #       with:
  #         image: ${{ env.IMAGE_NAME }}
  #         tags: ${{ steps.build-image.outputs.tags }}
  #         registry: ${{ env.REGISTRY }}/${{ github.repository_owner }} 
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
